name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  test-pylib:
    name: Test pylib
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade uv
          uv pip install -r requirements.txt --system

      - name: Run test script
        run: ./pylib/test.sh

  test-pylib_cs:
    name: Test pylib_cs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade uv
          uv pip install -r requirements_cs.txt --system

      - name: Run test script
        run: ./pylib_cs/test.sh

      - name: Test install and CLI
        run: |
          python3 -m pip install ./pylib_cs
          python3 -m pylib_cs.cslc_wsclust_shim

  test-async-ga:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - wse3
    env:
      CSLC: cslc
      CS_PYTHON: cs_python
      APPTAINERENV_CSL_SUPPRESS_SIMFAB_TRACE: 1
      WSE_GOL_ARCH_FLAG: ${{ matrix.arch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade uv
          uv pip install -r requirements.txt --system

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-22.11

      - name: Set up Nix Channels
        run: |
          nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
          nix-channel --update

      - name: Test nix
        run: |
          nix-env -iA nixpkgs.cowsay nixpkgs.hello
          cowsay "Hello from Nix!"
          hello

      - name: Set up Apptainer
        run: echo "nix-env -iA nixpkgs.apptainer" | sh
      - name: Test Apptainer
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: |
            apptainer --version
            sudo "$(which apptainer)" exec docker://busybox:latest echo "Hello from Singularity and Docker!"

      - name: Cache Cerebras SDK
        id: cache-sdk
        uses: actions/cache@v4
        with:
          path: ~/cerebras/bin
          key: cerebras-sdk-${{ github.repository }}-${{ secrets.CEREBRAS_SDK_VERSION }}
          restore-keys: |
            cerebras-sdk-${{ github.repository }}-${{ secrets.CEREBRAS_SDK_VERSION }}

      - name: Download SDK
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: |
            mkdir -p ~/cerebras/bin
            curl -L "${CEREBRAS_SDK_URL}" | tar -xzv -C ~/cerebras/bin
            ls ~/cerebras/bin
        env:
          CEREBRAS_SDK_URL: ${{ secrets.CEREBRAS_SDK_URL }}

      - name: Set up SDK
        run: |
          ls ~/cerebras/bin
          echo $GITHUB_PATH
          echo "$HOME/cerebras/bin" >> $GITHUB_PATH

      - name: Test SDK
        run: |
          which cslc
          which csdb
          which cs_python
          which cs_readelf
          which sdk_debug_shell
      - run: sudo env PATH=$PATH cslc -h  >/dev/null 2>&1
      - run: sudo env PATH=$PATH csdb --help  >/dev/null 2>&1
      - run: sudo env PATH=$PATH cs_python -h  >/dev/null 2>&1
      - run: sudo env PATH=$PATH cs_readelf -h >/dev/null 2>&1
      - run: sudo env PATH=$PATH sdk_debug_shell --help
      - run: echo "APPTAINERENV_CSL_SUPPRESS_SIMFAB_TRACE ${APPTAINERENV_CSL_SUPPRESS_SIMFAB_TRACE}"

      - name: Compile async-ga
        run: |
          export CSLC CS_PYTHON PATH WSE_GOL_ARCH_FLAG
          sudo -E env PATH=$PATH \
            ./kernel-gol/compile.sh \
            >/dev/null 2>&1

      - name: Run async-ga
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: |
            export CSLC CS_PYTHON PATH WSE_GOL_ARCH_FLAG
            sudo -E env PATH=$PATH \
              ./kernel-gol/execute.sh \
              # >/dev/null 2>&1

      - name: Build artifact
        run: |
          ls -1 ./kernel-gol
          find ./kernel-gol \
            -type f -name "a=genomes+*.pqt" \
            | python3 -m joinem \
              --with-column 'pl.lit(filepath).alias("source_file")' \
              "./kernel-gol/a=concatenated_genomes+ext=.csv"
          ls -1 "./kernel-gol/a=concatenated_genomes+ext=.csv"

      - name: Upload output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sample-populations+arch=${{ matrix.arch }}
          path: ./kernel-gol/a=concatenated_genomes+ext=.csv
